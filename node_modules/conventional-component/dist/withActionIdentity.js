'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _getDisplayName = require('./getDisplayName');

var _getDisplayName2 = _interopRequireDefault(_getDisplayName);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function withActionIdentity(actionCreator) {
  function withIdentity(identity) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var action = actionCreator.apply(undefined, args);
    if (identity) {
      if ((typeof action === 'undefined' ? 'undefined' : _typeof(action)) !== 'object') {
        throw new Error('conventional-component#withActionIdentity only supports action creators which create action objects. ' + 'If you need to support thunks, you must conform to the conventional-component ' + 'Action and ActionCreator signatures manually.');
      }
      return _extends({ identity: identity }, action);
    }

    if (!identity) {
      return action;
    }

    return _extends({ identity: identity }, action);
  }

  if (process.env.NODE_ENV !== 'production') {
    var actionCreatorName = (0, _getDisplayName2.default)(actionCreator, 'actionCreator');
    withIdentity.displayName = 'withIdentity(' + actionCreatorName + ')';
  }

  return withIdentity;
}

exports.default = withActionIdentity;