'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _redux = require('./redux');

var _getDisplayName = require('./getDisplayName');

var _getDisplayName2 = _interopRequireDefault(_getDisplayName);

var _createIdentifier = require('./createIdentifier');

var _createIdentifier2 = _interopRequireDefault(_createIdentifier);

var _createMapStateToProps = require('./createMapStateToProps');

var _createMapStateToProps2 = _interopRequireDefault(_createMapStateToProps);

var _createIdentifiedActionCreators = require('./createIdentifiedActionCreators');

var _createIdentifiedActionCreators2 = _interopRequireDefault(_createIdentifiedActionCreators);

var _defaultConventionalConfig = require('./defaultConventionalConfig');

var _defaultConventionalConfig2 = _interopRequireDefault(_defaultConventionalConfig);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function asConnectedComponent(conventionalConfig) {
  if (!_redux.connect || !_redux.bindActionCreators) {
    throw new Error('conventional-component#asConnectedComponent() cannot be used unless react-redux and redux are installed.');
  }

  var _defaultConventionalC = (0, _defaultConventionalConfig2.default)(conventionalConfig),
      actions = _defaultConventionalC.actions,
      withLogic = _defaultConventionalC.withLogic,
      Template = _defaultConventionalC.Template,
      REDUCER_NAME = _defaultConventionalC.REDUCER_NAME,
      COMPONENT_NAME = _defaultConventionalC.COMPONENT_NAME,
      COMPONENT_KEY = _defaultConventionalC.COMPONENT_KEY;

  var identifier = (0, _createIdentifier2.default)(COMPONENT_NAME, COMPONENT_KEY);

  var identifiedActions = (0, _createIdentifiedActionCreators2.default)(identifier, actions);

  var mapStateToProps = (0, _createMapStateToProps2.default)(REDUCER_NAME, identifier);

  function createMapDispatchToProps() {
    return function (dispatch, props) {
      return (0, _redux.bindActionCreators)(identifiedActions(props), dispatch);
    };
  }

  var ConnectedComponent = (0, _redux.connect)(mapStateToProps, createMapDispatchToProps)(withLogic(Template));

  ConnectedComponent.displayName = 'Connected' + COMPONENT_NAME;

  return ConnectedComponent;
}

exports.default = asConnectedComponent;