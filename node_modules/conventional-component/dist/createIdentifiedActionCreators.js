'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bindIdentityToActionCreator = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _getDisplayName = require('./getDisplayName');

var _getDisplayName2 = _interopRequireDefault(_getDisplayName);

var _defaultIdentifier = require('./defaultIdentifier');

var _defaultIdentifier2 = _interopRequireDefault(_defaultIdentifier);

var _actions = require('./actions');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var defaultEmptyObject = {};

var bindIdentityToActionCreator = function bindIdentityToActionCreator(identity) {
  return function (actionCreator) {
    var fn = function fn() {
      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return actionCreator.apply(undefined, [identity].concat(args));
    };

    fn.displayName = (0, _getDisplayName2.default)(actionCreator, 'AnonymousBoundActionCreator');

    return fn;
  };
};

var createIdentifiedActionCreators = function createIdentifiedActionCreators() {
  var identifier = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _defaultIdentifier2.default;
  var componentActions = arguments[1];

  var actions = _extends({}, componentActions, { init: _actions.init, receiveNextProps: _actions.receiveNextProps, destroy: _actions.destroy });
  return function () {
    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultEmptyObject;

    var bind = bindIdentityToActionCreator(identifier(props));

    var actionCreatorKeys = Object.keys(actions).filter(function (actionCreatorKey) {
      return typeof actions[actionCreatorKey] === 'function';
    });
    return actionCreatorKeys.reduce(function (boundActionCreators, actionCreatorKey) {
      var boundActionCreator = bind(actions[actionCreatorKey]);
      return _extends({}, boundActionCreators, _defineProperty({}, actionCreatorKey, boundActionCreator));
    }, {});
  };
};

exports.bindIdentityToActionCreator = bindIdentityToActionCreator;
exports.default = createIdentifiedActionCreators;