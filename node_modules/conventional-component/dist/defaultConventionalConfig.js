'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _getDisplayName = require('./getDisplayName');

var _getDisplayName2 = _interopRequireDefault(_getDisplayName);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DEFAULT_REDUCER_NAME = 'reducer';
var DEFAULT_COMPONENT_NAME = 'Template';
var DEFAULT_COMPONENT_KEY = 'id';

var defaultConventionalConfig = function defaultConventionalConfig() {
  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      actions = _ref.actions,
      withLogic = _ref.withLogic,
      Template = _ref.Template,
      reducer = _ref.reducer,
      _ref$REDUCER_NAME = _ref.REDUCER_NAME,
      REDUCER_NAME = _ref$REDUCER_NAME === undefined ? (0, _getDisplayName2.default)(reducer, 'reducer') : _ref$REDUCER_NAME,
      _ref$COMPONENT_NAME = _ref.COMPONENT_NAME,
      COMPONENT_NAME = _ref$COMPONENT_NAME === undefined ? (0, _getDisplayName2.default)(Template, 'Template') : _ref$COMPONENT_NAME,
      _ref$COMPONENT_KEY = _ref.COMPONENT_KEY,
      COMPONENT_KEY = _ref$COMPONENT_KEY === undefined ? DEFAULT_COMPONENT_KEY : _ref$COMPONENT_KEY;

  if (!actions || (typeof actions === 'undefined' ? 'undefined' : _typeof(actions)) !== 'object') {
    throw new Error('conventional-component#asConnectedComponent() should be passed an `actions` object containing action creators.');
  }

  if (!withLogic || typeof withLogic !== 'function') {
    throw new Error('conventional-component#asConnectedComponent() should be passed a `withLogic()` higher-order component.');
  }

  if (!Template || typeof Template !== 'function') {
    throw new Error('conventional-component#asConnectedComponent() should be passed a `Template` component.');
  }

  if (!REDUCER_NAME || typeof REDUCER_NAME !== 'string') {
    throw new Error('conventional-component#asConnectedComponent() should be passed the `REDUCER_NAME` key that contains the state or given a reducer with a name.');
  }

  return {
    actions: actions,
    withLogic: withLogic,
    Template: Template,
    reducer: reducer,
    REDUCER_NAME: REDUCER_NAME,
    COMPONENT_NAME: COMPONENT_NAME,
    COMPONENT_KEY: COMPONENT_KEY
  };
};

exports.default = defaultConventionalConfig;